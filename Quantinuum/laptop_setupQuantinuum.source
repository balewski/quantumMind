# first load my Quantinumm credentials is to initialise a MemoryCredentialStorage with username and password both set

echo load my QTUUM creds
source /Users/balewski/.ssh/quantinuum.credentials
#env |grep MY_QTUUM  # activate to see the creds

IMG=balewski/ubu22-tket-qtuum:p3  # works in 2024
echo launch image $IMG
echo you are launching Docker image ...  remeber to exit


JNB_PORT=' '
WORK_DIR=/qtuum

echo "The number of arguments is: $#"
#  encoded variables:    jnb
for var in "$@"; do
  echo "The length of argument '$var' is: ${#var}"
  if [[ "jnb" ==  $var ]];  then
      #echo added  $JNB_PORT
     #echo "  cd notebooks;  jupyter notebook --ip 0.0.0.0 --no-browser --allow-root --port  $RP "
     JNB_PORT="    -p 8833:8833 "
     echo added  $JNB_PORT
     echo "  cd notebooks;  jupyter notebook --ip 0.0.0.0 --no-browser --allow-root --port  8833"
     
  fi
  # ... more ...
done
    
podman run -it \
    -e MY_QTUUM_NAME=$MY_QTUUM_NAME \
    -e MY_QTUUM_PASS=$MY_QTUUM_PASS \
    -e Qtuum_dataVault=/dataVault/dataQtuum_2023julyA \
    --volume /docker_volumes/quantumMind/Quantinuum:/qtuum \
    --volume /docker_volumes/quantumPath:/quantumPath \
    --volume /docker_volumes/qcrank_wrk:/qcrank_wrk \
    --volume /docker_volumes/quantumMind:/quantumMind \
    --volume /docker_volumes/dataVault:/dataVault \
      --workdir $WORK_DIR \
    $JNB_PORT \
    --user $(id -u):$(id -g) \
    $IMG /bin/bash


# Warning:  QTUUM  tutorial JNB using Azure will NOT work with pyjwt=2.4
# /qtuum_wrk/hqs-api-examples/notebooks  \

# first time
#
# cd /qtuum_wrk/hqs-api-examples/notebooks/qtuum/
# pip install   -r requirements.txt  --target  /qtuum_wrk/.local
#
# ???ALWAYS
# export PATH=/qtuum_wrk/.local/bin:$PATH
# Run jupyter notebook 
# cd    /qtuum_wrk/hqs-api-examples/notebooks
# jupyter notebook --ip 0.0.0.0 --no-browser --allow-root --port 8888

