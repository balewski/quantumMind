#!/bin/bash

IMG=balewski/ubu22-qiskit-qml:p2ch  # has my hack of Qiskit for feed-forward
IMG=balewski/ubu22-qiskit-qml:p3e  # Qiskit 0.45
#IMG=balewski/ubu22-qiskit1.0:p1b  # feed-forward works better


echo launch image $IMG
echo you are launching Podman image ...  remeber to exit

JNB_PORT=' '
WORK_DIR=/Qiskit

echo "The number of arguments is: $#"
#  encoded variables:    jnb
for var in "$@"; do
  echo "The length of argument '$var' is: ${#var}"
  if [[ "jnb" ==  $var ]];  then
      #JNB_PORT="    --publish 8833:8833 "
      JNB_PORT="    -p 8833:8833 "
     echo added  $JNB_PORT
     echo "  cd notebooks;  jupyter notebook --ip 0.0.0.0 --no-browser --allow-root --port  8833 "
  fi
  # ... more ...
done
    
podman run -it \
    -e AWS_ACCESS_KEY_ID=$QUERA_AWS_ACCESS_KEY_ID \
    -e AWS_SECRET_ACCESS_KEY="$QUERA_AWS_SECRET_ACCESS_KEY" \
    -e AWS_DEFAULT_REGION=$QUERA_AWS_REGION \
    --volume /docker_volumes/quantumMind/Qiskit:/Qiskit \
    --volume /docker_volumes/quantumMind:/quantumMind \
    --volume /docker_volumes/prosty-waz:/prosty-waz \
    --volume /docker_volumes/dataVault2024:/dataVault2024 \
      --workdir $WORK_DIR \
      --user $(id -u):$(id -g) \
      $JNB_PORT \
    $IMG /bin/bash

#

#     -e QuEra_dataVault=/dataVault/dataQuEra_2023julyA \

# 
# after start install QPIXL:  cd   /qpixl_wrk;   pip install -e .
# XXXsetup IBMQ creds:           /dataVault/activate_ibmq.py 
#test it works:    python3 -c 'import qpixl'
# after FIRST start install Qtuum NB:
#   cd /qtuum_wrk/hqs-api-examples/notebooks/qtuum/ ;  pip install   -r requirements.txt  --target  /qtuum_wrk/.local
# test JNB
# cd    /qtuum_wrk/hqs-api-examples/notebooks
# jupyter notebook --ip 0.0.0.0 --no-browser --allow-root --port 8844
