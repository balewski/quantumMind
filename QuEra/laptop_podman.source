#!/bin/bash
# first load my Quantinuum credentials is to initialise a MemoryCredentialStorage with username and password both set

echo load my QuEra-AWS creds
source /Users/balewski/.ssh/quera_aws.credentials
env |grep QUERA_AWS  # activate to see the creds

IMG=balewski/ubu24-braket-quera:p1

echo launch image $IMG
echo you are launching Podman image ...  remeber to exit

JNB_PORT=''
WORK_DIR=/quera
DATA_VAULT=/docker_volumes/dataVault2024
CMD=/bin/bash

echo "The number of arguments is: $#"
#  encoded variables:    jnb
for var in "$@"; do
  echo "The length of argument '$var' is: ${#var}"
  if [[ "jnb" ==  $var ]];  then
      let LP=$RANDOM+32768
      JNB_PORT="    -p $LP:$LP  "
      WORK_DIR=/quera/notebooks/bloqade
      echo added  $JNB_PORT
      CMD="   jupyter notebook --ip 0.0.0.0 --no-browser --allow-root --port  $LP  "
  fi
  # ... more ...
done
    
eval podman run -it \
    -e AWS_ACCESS_KEY_ID=$QUERA_AWS_ACCESS_KEY_ID \
    -e AWS_SECRET_ACCESS_KEY="$QUERA_AWS_SECRET_ACCESS_KEY" \
    -e AWS_DEFAULT_REGION=$QUERA_AWS_REGION \
    -e QuEra_dataVault=/dataVault/dataQuEra_2023julyA \
    --volume /docker_volumes/quantumMind/QuEra/python:/quera \
    --volume /docker_volumes/quantumMind:/quantumMind \
    --volume $DATA_VAULT:/dataVault2024 \
    --workdir $WORK_DIR \
    $JNB_PORT \
    --user $(id -u):$(id -g) \
    $IMG $CMD


# 
# after start install QPIXL:  cd   /qpixl_wrk;   pip install -e .
# XXXsetup IBMQ creds:           /dataVault/activate_ibmq.py 
#test it works:    python3 -c 'import qpixl'
# after FIRST start install Qtuum NB:
#   cd /qtuum_wrk/hqs-api-examples/notebooks/qtuum/ ;  pip install   -r requirements.txt  --target  /qtuum_wrk/.local


#  eval $(ssh-agent)
#  ssh-add ./git-any 
